name: build

on: [ push, pull_request ]

jobs:
  build_deploy:
    #if conditional to prevent a job from running
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: deploy release
    steps:
      - uses: actions/checkout@v2
      - name: set ref as env
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: fwilhe2/setup-kotlin@main
      - name: gradle wrapper --gradle-version 6.7 --distribution-type all
        run: gradle wrapper
      # This action will create a github release and optionally upload an artifact to it.
      # https://github.com/ncipollo/release-action
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle Build
        run: ./gradlew build
      - name: publish new version to github package
        run: ./gradlew publish
        env:
          GPR_USER: ${{ secrets.GPR_USER }}
          GPR_KEY: ${{ secrets.GPR_KEY }}
          VERSION: ${{ steps.vars.outputs.tag }}
        continue-on-error: true
      - name: publish tp bintray jcenter
        run: ./gradlew bintrayUpload
        env:
          GPR_USER: ${{ secrets.GPR_USER }}
          GPR_KEY: ${{ secrets.BINTRAY_KEY }}
        continue-on-error: true
      - name: Create a Release JAR
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/libs/*.jar
          commit: ${{ github.sha }}
          token: ${{ secrets.COMMIT_TOKEN }}
        continue-on-error: true